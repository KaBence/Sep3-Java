syntax = "proto3";
option java_multiple_files = true;


package sep;

//----------Login----------\\

message DtoLogin
{
  string phoneNumber = 1;
  string password = 2;
}

message loginRequest
{
  DtoLogin login = 1;
}

message loginResponse{
  string phoneNumber=1;
  string instanceOf = 2;
}

//----------Register----------\\

////--------Customer--------\\\\
message DtoRegisterCustomer
{
  string phoneNumber = 1;
  string password = 2;
  string repeatPassword=3;
  string firstName = 4;
  string lastName = 5;
  string address = 6;
}

message registerCustomerRequest
{
  DtoRegisterCustomer newCustomer = 1;
}


////--------Farmer--------\\\\
message DtoRegisterFarmer
{
  string phoneNumber = 1;
  string password = 2;
  string repeatPassword=3;
  string firstName = 4;
  string lastName = 5;
  string address = 6;
  bool pesticides = 7;
  string farmName=8;
}

message registerFarmerRequest
{
  DtoRegisterFarmer newFarmer = 1;
}

//----------Customer----------\\

message DtoCustomer
{
  string phoneNumber = 1;
  string firstName = 2;
  string lastName = 3;
  string address = 4;
}

message getAllCustomersRequest{}

message getAllCustomersResponse
{
  repeated DtoCustomer allCustomers = 1;
}

message getCustomerByPhoneRequest
{
  string customersPhone = 1;
}

message getCustomerByPhoneResponse
{
  DtoCustomer customer = 1;
}
message editCustomerRequest
{
  DtoRegisterCustomer editedCustomer = 1;
}


//----------Farmer----------\\

message DtoFarmer
{
  string phoneNumber = 1;
  string firstName = 2;
  string lastName = 3;
  string address = 4;
  bool pesticides = 5;
  string farmName= 6;
  double rating = 7;
}

message getAllFarmersRequest
{
  int32 pesticides =1;
  string farmName =2;
  double rating =3;
}

message getAllFarmersResponse
{
  repeated DtoFarmer allFarmers = 1;
}

message getFarmerByPhoneRequest
{
  string farmersPhone = 1;
}

message getFarmerByPhoneResponse
{
  DtoFarmer farmer = 1;
}
message editFarmerRequest
{
  DtoRegisterFarmer editedFarmer = 1;
}

//----------Order----------\\

message DtoOrder
{
  int32 orderId = 1;
  string status = 2;
  string date = 3;
  string customerId = 4;
}

message createOrderRequest
{
  DtoOrder newOrder = 1;
  repeated DtoOrderItem orderItems = 2;
  string PaymentMethod=3;
  string note=4;
}

//----------Product----------\\

message DtoProduct
{
  int32 id = 1;
  bool availability = 2;
  double amount = 3;
  string type = 4;
  double price = 5;
  string pickedDate = 6;
  string expirationDate = 7;
  string farmerId = 8;
}
message getAllProductsRequest{
  string type=1;
  double amount=2;
  double price=3;
}

message getAllProductsResponse{
  repeated DtoProduct allProducts=1;
}

message createProductRequest
{
  DtoProduct newProduct = 1;
}
//selecting the farm first and then their product
message getAllProductsByFarmerRequest
{
  string farmer = 1;
  string type=2;
  double amount=3;
  double price=4;
}

message getAllProductsByFarmerResponse
{
  repeated DtoProduct allProducts = 1;
}
//editing the product
message getProductByIdRequest
{
  int32 id = 1;
}

message getProductByIdResponse
{
  DtoProduct product = 1;
}
//Selecting the product first and then farm

//Updating a product -> needs DTOProduct
message updateProductRequest{
  DtoProduct product=1;
}

message deleteProductRequest{
  int32 Id = 1;
}

//----------OrderItem----------\\

message DtoOrderItem
{
  int32 orderId = 1;
  int32 productId = 2;
  double  amount = 3;
  string type=4;
  double price=5;
  string farmName=6;

}

message getAllOrderItemsFromOrderRequest
{
  int32 orderId = 1;
}

message getAllOrderItemsFromOrderResponse
{
  repeated DtoOrderItem OrderItems = 1;
}

message getAllOrderItemsByGroupRequest{
  int32 orderId=1;
}

message getAllOrderItemsByGroupResponse{
  repeated DtoOrderItem OrderItems=1;
}


//----------Receipt----------\\

message DtoReceipt
{
  int32 orderId = 1;
  bool processed = 2;
  double price = 3;
  string paymentMethod = 4;
  string paymentDate = 5;
  string text = 6;
  string farmerId = 7;
  string customerId = 8;
  string status=9;
}

message DtoSendReceipt{
  DtoReceipt receipt=1;
  string dateOfCreation=2;
}

message DtoCustomerSendReceipt{
  repeated string farmNames=1;
  double combinedPrice=2;
  string dateOfCreation=3;
  repeated DtoReceipt receipts=4;
}

message getPendingReceiptsByFarmerRequest
{
  string farmer = 1;
}

message getApprovedReceiptsByFarmerRequest{
  string farmer=1;
}

message getRejectedReceiptsByFarmerRequest{
  string farmer=1;
}

message getReceiptsResponse{
  repeated DtoSendReceipt receipts=1;
}

message getReceiptsByCustomerRequest{
  string customer=1;
}

message getReceiptsByCustomerResponse{
  repeated DtoCustomerSendReceipt receipts=1;
}



message farmersApprovalRequest{
  bool approve=1;
  int32 orderId=2;
}

//----------Comment----------\\

message DtoComment
{
  int32 commentId = 1;
  string text = 2;
  string farmerId = 3;
  string customerId = 4;
  int32 orderId = 5;
  string username = 6;
}

message putCommentRequest
{
  DtoComment comment = 1;
}

//----------Review----------\\

message DtoReview
{
  string text = 1;
  double star = 2;
  string farmerId = 3;
  string customerId = 4;
  int32 orderId = 5;
  repeated DtoComment comments = 6;
}

message postReviewRequest
{
  DtoReview review = 1;
}

message getAllReviewsByFarmerRequest
{
  string farmer = 1;
}

message getAllReviewsByFarmerResponse
{
  repeated DtoReview allReviews = 1;
}

message getReviewByIdRequest
{
  string farmerId = 1;
  string customerId = 2;
}

message getReviewByIdResponse
{
  DtoReview review = 1;
}

//----------GeneralPutResponse----------\\

message generalPutResponse
{
  string resp = 1;
}

//----------Service----------\\

service SepService
{
  //--------Login--------\\
  rpc login(loginRequest) returns (loginResponse);

  //--------Register--------\\
  rpc registerCustomer(registerCustomerRequest) returns (generalPutResponse);
  rpc registerFarmer(registerFarmerRequest) returns (generalPutResponse);

  //--------Customer--------\\
  rpc getAllCustomers(getAllCustomersRequest) returns (getAllCustomersResponse);
  rpc getCustomerByPhone(getCustomerByPhoneRequest) returns (getCustomerByPhoneResponse);
  rpc editCustomer(editCustomerRequest) returns (generalPutResponse);
  //--------Farmer--------\\
  rpc getAllFarmers(getAllFarmersRequest) returns (getAllFarmersResponse);
  rpc getFarmerByPhone(getFarmerByPhoneRequest) returns (getFarmerByPhoneResponse);
  rpc editFarmer(editFarmerRequest) returns (generalPutResponse);

  //--------Order--------\\
  rpc createNewOrder(createOrderRequest) returns (generalPutResponse);

  //--------Product--------\\
  rpc createProduct(createProductRequest) returns (generalPutResponse);
  rpc getProductsByFarmer(getAllProductsByFarmerRequest) returns (getAllProductsByFarmerResponse);
  rpc getProductById(getProductByIdRequest) returns (getProductByIdResponse);
  rpc getAllProducts(getAllProductsRequest) returns (getAllProductsResponse);
  rpc updateProduct(updateProductRequest) returns (generalPutResponse);
  rpc deleteProduct(deleteProductRequest) returns (generalPutResponse);

  //--------OrderItem--------\\
  rpc getAllOrderItemsFromOrder(getAllOrderItemsFromOrderRequest) returns (getAllOrderItemsFromOrderResponse);
  rpc getAllOrderItemsByGroup(getAllOrderItemsByGroupRequest) returns (getAllOrderItemsByGroupResponse);

  //--------Receipt--------\\
  rpc getPendingFarmersReceipt(getPendingReceiptsByFarmerRequest) returns (getReceiptsResponse);
  rpc getApprovedFarmersReceipt(getApprovedReceiptsByFarmerRequest) returns (getReceiptsResponse);
  rpc getRejectedFarmersReceipt(getRejectedReceiptsByFarmerRequest) returns (getReceiptsResponse);
  rpc getCustomersReceipt(getReceiptsByCustomerRequest) returns(getReceiptsByCustomerResponse);
  rpc farmersApproval(farmersApprovalRequest) returns(generalPutResponse);

  //--------Comment--------\\
  rpc postComment(putCommentRequest) returns (generalPutResponse);

  //--------Review--------\\
  rpc postReview(postReviewRequest) returns (generalPutResponse);
    rpc getAllReviewsByFarmer(getAllReviewsByFarmerRequest) returns (getAllReviewsByFarmerResponse);
    rpc getReviewBy(getReviewByIdRequest) returns (getReviewByIdResponse);
}
